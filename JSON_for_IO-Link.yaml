openapi: 3.0.1
info:
  description: >-
    This is a sample IO-Link Master server. You can find out more about IO-Link
    at [http://www.io-link.com](http://www.io-link.com)

    # Description

    [Here you can put a general description of the API.]

    ## Error messages

    ### IODD Upload error codes

    * [1] Unable to upload IODD XML file. Insufficient memory space.

    * [2] Uploaded file is no valid IODD XML. Upload rejected.
      - Remark: We could check the file content superficially to ensure that the IODD is an XML and an IODD (e.g. vendorId, deviceId, VendorName, ProductName and other mandatory elements or attributes).
    * [3] Uploaded file is no valid IODD XML. CRC check failed. Upload rejected.

    * [4] Uploaded file is no valid IODD XML. Parsing failed. Upload rejected.
      - Remark: All those systems that do not want to store the IODD have to parse it immediately.

    ### Process Data handling

    * [5] Writing processdata to Pin 2 is not possible. Pin 2 is not configured as DIGITAL_OUTPUT.

    * [6] Writing processdata to Pin 4 is not possible. Pin 4 is not configured as DIGITAL_OUTPUT.

    * [7] Attached IO-Link device has no output process data.

    ### Process data with IODD.

    * [8] HTTP Status 400: IODD is not available.

    ### Data Storage

    * [9] HTTP Status 400: Mismatch between configured device and data storage meta data.

    ### General

    //e.g. if a master does not support an operation

    * [10] HTTP Status 404: Operation not implemented.

    ### Implementation hint:

    Specific error messages have to be provided only if the corresponding operation is supported. So you do not need to give specific errors for bad IODDs, just indicate error 10.

  version: 0.0.3
  title: Swagger IO-Link Master
  contact:
    email: oliver.lingg@sick.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://iolmaster.io-link.com'
    variables:
      basePath:
        default: /iol/v1
tags:
  - name: master
    description: Access to parameters of the IO-Link master itself
  - name: ports
    description: Access to the IO-Link ports of the IO-Link master
  - name: devices
    description: Access to the IO-Link Devices connected ot the Master
  - name: connections
    description: 'Access to several connections like MQTT, ...'
paths:
  /identification:
    get:
      tags:
        - master
      summary: Read the identification of the IO-Link master
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identificationGet'
    post:
      tags:
        - master
      summary: Write application specific identification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identificationPost'
      responses:
        '200':
          description: Successful operation
  /capabilities:
    get:
      tags:
        - master
      summary: Read the capabilities of the master
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/capabilitiesGet'
  /configuration:
    get:
      tags:
        - master
      summary: Read the configuration of the IO-Link master
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGetPost'
    post:
      tags:
        - master
      summary: Update the configuration of the IO-Link master
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configurationGetPost'
      responses:
        '200':
          description: Successful operation
  /reset:
    post:
      tags:
        - master
      summary: Invoke a reset of the IO-Link master
      responses:
        '200':
          description: Successful operation
  /reboot:
    post:
      tags:
        - master
      summary: Invoke a reboot of the IO-Link master
      responses:
        '200':
          description: Successful operation
  /mqtt/configuration:
    get:
      tags:
        - connections
      summary: Read the MQTT configuration of the master
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttConfigurationGetPost'
    post:
      tags:
        - connections
      summary: Update the MQTT configuration of the master
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttConfigurationGetPost'
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/errorResponse'
  /mqtt/configuration/topics:
    get:
      tags:
        - connections
      summary: Get the list of MQTT topics
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mqttConfigurationTopicGet'
    post:
      tags:
        - connections
      summary: Create a new MQTT topic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttConfigurationTopicPost'
      responses:
        '200':
          description: Successful operation returning the topic ID
          content:
            application/json:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/errorResponse'
  '/mqtt/configuration/topics/{topicId}':
    get:
      tags:
        - connections
      summary: Get one MQTT topic
      parameters:
        - $ref: '#/components/parameters/mqttTopicId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttConfigurationTopicGet'
        '400':
          $ref: '#/components/responses/errorResponse'
    delete:
      tags:
        - connections
      summary: Delete the specified MQTT topic
      parameters:
        - $ref: '#/components/parameters/mqttTopicId'
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/errorResponse'
  '/ports/{portId}/status':
    get:
      tags:
        - ports
      summary: Read the status of the selected port
      parameters:
        - $ref: '#/components/parameters/portId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portStatusGet'
  '/ports/{portId}/capabilities':
    get:
      tags:
        - ports
      summary: Read the capability information of the specified port
      parameters:
        - $ref: '#/components/parameters/portId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portCapabilitiesGet'
  '/ports/{portId}/configuration':
    get:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/portId'
      summary: Read the configuration of the specified port
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portConfigurationGetPost'
    post:
      tags:
        - ports
      summary: Write the configuration of the specified port
      parameters:
        - $ref: '#/components/parameters/portId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/portConfigurationGetPost'
      responses:
        '200':
          description: Successful operation
  '/ports/{portId}/datastorage':
    get:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/portId'
      summary: Read the Data Storage of the specified port
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStorageGetPost'
    post:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/portId'
      summary: Write the Data Storage of the specified port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataStorageGetPost'
      responses:
        '200':
          description: Successful operation
  '/ports/{portId}/events':
    get:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/portId'
        - name: count
          in: query
          description: The number of the events to read from the master.
          schema:
            type: integer
      summary: Read the Port event log.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iolinkEventsGet'
  '/devices':
    get:
      tags:
        - devices
      summary: Read all the available deviceName keys.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - DT35
                  - TAD081
                  - BNI_IOL
  '/devices/{deviceName}/identification':
    get:
      tags:
        - devices
      summary: Read the identification of the device at the specified port
      description: >-
        *Implementation hint*: You have to request the ISDU values of
        applicationSpecificTag, locationTag and functionTag (if they are
        supported by the device).
      parameters:
        - $ref: '#/components/parameters/deviceName'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portIdentificationGet'
    post:
      tags:
        - devices
      summary: Write application specific port identification
      parameters:
        - $ref: '#/components/parameters/deviceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/portIdentificationPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/processdata/value':
    get:
      tags:
        - devices
      summary: >-
        Read the process data (input and optionally the output) and the pin2
        value (if it is used) of the specified port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/direction'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceProcessDataValueGet'
    post:
      tags:
        - devices
      summary: >-
        Write the process data (output) and the pint2 value (if it is used) of
        the specific port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceProcessDataValuePost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/parameters/{index}/value':
    get:
      tags:
        - devices
      summary: Read the parameter with the given index from the specified port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParameterValueGetPost'
    post:
      tags:
        - devices
      summary: Write the parameter with the given index from the specified port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceParameterValueGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/parameters/{index}/subindices/{subindex}/value':
    get:
      tags:
        - devices
      summary: >-
        Read the parameter with the given index and subindex from the specified
        port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/subindex'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParameterSubindexValueGetPost'
    post:
      tags:
        - devices
      summary: >-
        Write the parameter with the given index and subindex from the specified
        port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/subindex'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceParameterSubindexValueGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/events':
    get:
      tags:
        - devices
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - name: count
          in: query
          description: The number of the events to read from the master.
          schema:
            type: integer
      summary: Read the Device event log.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iolinkEventsGet'
  /iodds:
    get:
      tags:
        - iodds
      summary: List of all IODD (representations) that are available on the gateway.
      description: >-
        Only one version of an IODD is stored on the webserver at the same time
        for one vendorId-deviceId-combination.
      responses:
        '200':
          description: An IODD XML file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ioddsGet'
    post:
      tags:
        - iodds
      summary: Update or create an IODD
      description: >
        I do not need to specifiy the identification data for this action as the
        parser can read this information.
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/ioddFile'
      responses:
        '200':
          description: Successful operation
  '/iodds/vendors/{vendorId}/devices/{deviceId}/revisions/{ioLinkRevision}':
    get:
      tags:
        - iodds
      summary: Get a specific IODD
      description: '[optional] (makes only sense if the server stores the IODDs as files)'
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/ioLinkRevision'
      responses:
        '200':
          description: An IODD XML file
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ioddFile'
    delete:
      tags:
        - iodds
      summary: Delete a specific IODD representation
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/ioLinkRevision'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ioddsGet'
components:
  schemas:
    cycleTime:
      type: object
      properties:
        value:
          type: number
        unit:
          type: string
          enum:
            - ms
    index:
      type: object
      properties:
        index:
          type: integer
          minimum: 0
    subindex:
      allOf:
        - $ref: '#/components/schemas/index'
        - type: object
          properties:
            subindex:
              type: integer
              minimum: 0
    name:
      type: object
      properties:
        name:
          type: string
    processData:
      type: object
      properties:
        processData:
          type: boolean
    format:
      type: string
      enum:
        - raw
        - iodd
      default: iodd
    direction:
      type: string
      enum:
        - in
        - out
        - both
      default: in
    identificationGet:
      required:
        - vendorId
        - masterId
        - masterType
        - serialNumber
        - orderCode
        - productName
        - vendorName
        - hardwareRevision
        - softwareRevision
        - website
        - manual
      type: object
      properties:
        vendorId:
          type: integer
        masterId:
          type: integer
        masterType:
          type: string
          enum:
            - Unspecific
            - Master acc. V1.0
            - Master acc. V1.1
            - FS_Master
            - W_Master
        serialNumber:
          type: string
        orderCode:
          type: string
        productName:
          type: string
        vendorName:
          type: string
        hardwareRevision:
          type: string
        softwareRevision:
          type: string
        website:
          type: string
        manual:
          type: string
        applicationSpecificTag:
          type: string
        locationTag:
          type: string
        functionTag:
          type: string
      example:
        vendorId: 26
        masterId: 42
        masterType: Master acc. V1.0
        serialNumber: IOLM123456
        orderCode: PROD-123456
        vendorName: SICK AG
        hardwareRevision: 3.2.1.444R
        softwareRevision: 3.2.1.888R
        website: 'http://www.sick.de/io-link-master'
        manual: 'http://www.sick.de/io-link-master/documentation.pdf'
        applicationSpecificTag: Fallback reader at the end of the belt
        locationTag: Down under
        functionTag: Code reading
    identificationPost:
      type: object
      properties:
        applicationSpecificTag:
          type: string
        locationTag:
          type: string
        functionTag:
          type: string
      example:
        applicationSpecificTag: Fallback reader at the end of the belt
        locationTag: Down under
        functionTag: Code reading
    capabilitiesGet:
      required:
        - ioddSupported
        - maxNumberOfPorts
        - maxPowerSupply
      type: object
      properties:
        ioddSupported:
          type: boolean
        maxNumberOfPorts:
          type: integer
        maxPowerSupply:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
      example:
        ioddSupported: true
        maxNumberOfPorts: 8
        maxPowerSupply:
          value: 0.3
          unit: A
    configurationGetPost:
      type: object
      properties:
        ethIpv4:
          type: array
          items:
            type: object
            properties:
              ipAddress:
                type: string
              subnetMask:
                type: string
              standardGateway:
                type: string
        ethIpv6:
          type: array
          items:
            type: object
      example:
        ethIpv4:
          - ipAddress: 192.168.1.13
            subnetMask: 255.255.255.0
            standardGateway: 192.168.1.1
    iolinkEventsGet:
      type: array
      items:
        type: object
        required:
          - code
          - message
          - severity
        properties:
          timestamp:
            type: string
          code:
            type: integer
          message:
            type: string
          severity:
            type: string
            enum:
              - ERROR
              - WARNING
              - NOTIFICATION
          mode:
            type: string
            enum:
              - SINGLESHOT
              - APPEARS
              - DISAPPEARS
      example:
        - timestamp: '2018-06-19T10:21:09.989Z'
          code: 8011
          message: sample message
          severity: WARNING
          mode: SINGLESHOT
        - timestamp: '2018-06-19T10:21:09.989Z'
          code: 8011
          message: sample message
          severity: WARNING
          mode: SINGLESHOT
    mqttConfigurationGetPost:
      type: object
      properties:
        brokerAddress:
          type: string
        username:
          type: string
        password:
          type: string
        lastWill:
          type: object
          properties:
            topic:
              type: string
            message:
              type: string
            qoS:
              type: string
            retain:
              type: string
        keepAliveTime:
          type: integer
    mqttConfigurationTopicPost:
      allOf:
        - type: object
          properties:
            topicName:
              type: string
            qos:
              type: string
              enum:
                - At most once
                - At least once
                - Exactly once
            interval:
              type: integer
              minimum: 0
              description: in milliseconds; 0 = as fast as possible
            onChange:
              type: boolean
            port:
              type: integer
              minimum: 0
              description: Port number starting with 1
            format:
              $ref: '#/components/schemas/format'
        - oneOf:
            - $ref: '#/components/schemas/index'
            - $ref: '#/components/schemas/subindex'
            - $ref: '#/components/schemas/name'
            - $ref: '#/components/schemas/processData'
    mqttConfigurationTopicGet:
      allOf:
        - type: object
          properties:
            topicId:
              type: integer
        - $ref: '#/components/schemas/mqttConfigurationTopicPost'
    portStatusGet:
      type: object
      properties:
        portStatusInfo:
          type: string
          enum:
            - NO_DEVICE
            - DEACTIVATED
            - INCORRECT_DEVICE
            - PREOPERATE
            - OPERATE
            - DI_C/Q
            - DO_C/Q
        ioLinkRevision:
          type: string
          enum:
            - '1.0'
            - '1.1'
        transmissionRate:
          type: string
          enum:
            - NOT_DETECTED
            - COM1
            - COM2
            - COM3
        masterCycleTime:
          $ref: '#/components/schemas/cycleTime'
      example:
        portStatusInfo: NO_DEVICE
        ioLinkRevision: '1.0'
        transmissionRate: COM2
        masterCycleTime:
          value: 2.3
          unit: ms
    portIdentificationGet:
      required:
        - vendorId
        - deviceId
        - serialNumber
        - hardwareRevision
        - firmwareRevision
      type: object
      properties:
        vendorId:
          type: integer
        deviceId:
          type: integer
        ioLinkRevision:
          type: string
          enum:
            - '1.0'
            - '1.1'
        vendorName:
          type: string
        vendorText:
          type: string
        productName:
          type: string
        productId:
          type: string
        productText:
          type: string
        serialNumber:
          type: string
        hardwareRevision:
          type: string
        firmwareRevision:
          type: string
        applicationSpecificTag:
          type: string
        locationTag:
          type: string
        functionTag:
          type: string
      example:
        vendorId: 26
        deviceId: 42
        ioLinkRevision: '1.1'
        vendorName: SICK AG
        vendorText: Sensor Intelligence.
        productName: WTxx16
        productId: PROD-123456
        productText: Light switch
        serialNumber: IOLM123456
        hardwareRevision: 3.2.1.444R
        firmwareRevision: 3.2.1.888R
        applicationSpecificTag: Fallback light switch at the end of the belt
        locationTag: Down under
        functionTag: Check end of belt
    portIdentificationPost:
      type: object
      properties:
        applicationSpecificTag:
          type: string
          example: Fallback light switch at the end of the belt
        locationTag:
          type: string
          example: Down under
        functionTag:
          type: string
          example: Check start of belt
      example:
        applicationSpecificTag: Fallback light switch at the end of the belt
        locationTag: Down under
        functionTag: Check start of belt
    portCapabilitiesGet:
      type: object
      properties:
        maxPowerSupply:
          type: object
          properties:
            value:
              type: number
            unit:
              type: string
        portType:
          type: string
          enum:
            - CLASS_A
            - CLASS_A_WITH_PORT_POWER_OFF_ON
            - CLASS_B
            - FS_PORT_A_WITHOUT_OSSDE
            - FS_PORT_A_WITH_OSSDE
            - FS_PORT_B
            - W_MASTER
      example:
        maxPowerSupply:
          value: 0.3
          unit: A
        portType: CLASS_A
    portConfigurationGetPost:
      type: object
      properties:
        portMode:
          type: string
          enum:
            - DEACTIVATED
            - IOL_MANUAL
            - IOL_AUTOSTART
            - DI
            - DO
        validationAndBackup:
          type: string
          enum:
            - NO_DEVICE_CHECK
            - TYPE_COMPATIBLE_DEVICE_V1.0
            - TYPE_COMPATIBLE_DEVICE_V1.1
            - TYPE_COMPATIBLE_DEVICE_V1.1_BACKUP_AND_RESTORE
            - TYPE_COMPATIBLE_DEVICE_V1.1_RESTORE
        pin2Configuration:
          type: string
          enum:
            - NOT_SUPPORTED
            - DIGITAL_INPUT
            - DIGITAL_OUTPUT
            - ANALOG_INPUT
            - ANALOG_OUTPUT
            - POWER_2
        cycleTime:
          $ref: '#/components/schemas/cycleTime'
        vendorId:
          type: integer
        deviceId:
          type: integer
        deviceName:
          type: string
      example:
        portMode: IOL_AUTOSTART
        validationAndBackup: TYPE_COMPATIBLE_DEVICE_V1.1
        pin2Configuration: ANALOG_INPUT
        cycleTime:
          value: 2.3
          unit: ms
        vendorId: 26
        deviceId: 333
        deviceName: Distance_sensor_1
    dataStorageGetPost:
      type: object
      properties:
        header:
          type: object
          properties:
            vendorId:
              type: integer
            deviceId:
              type: integer
            ioLinkRevision:
              type: string
              enum:
                - '1.0'
                - '1.1'
        content:
          description: Base64 coded DS data Ojects. Max size = 2KB*1.33.
          type: array
          items:
            type: integer
      example:
        header:
          vendorId: 15
          deviceId: 65253
          ioLinkRevision: '1.1'
        content: dasdASDasddaSdASdASdasDasdASdasDASdasasd
    pin2Value:
      type: boolean
      description: >
        IO-Link cable pin2 level if it is used as digital input or output.
        (false - 0 V, true - 24 V)
    pin4Value:
      type: boolean
      description: >
        IO-Link cable pin4 (C/Q) level if it is used as digital input or output
        (SIO mode). (false - 0 V, true - 24 V)
    processDataValue:
      type: object
      properties:
        valid:
          type: boolean
        value:
          oneOf:
            - $ref: '#/components/schemas/deviceRawTypeValue'
            - $ref: '#/components/schemas/deviceSimpleTypeValue'
            - $ref: '#/components/schemas/deviceComplexTypeValue'
    deviceProcessDataValueGet:
      type: object
      properties:
        pin2Value:
          $ref: '#/components/schemas/pin2Value'
        pin4Value:
          $ref: '#/components/schemas/pin4Value'
        in:
          $ref: '#/components/schemas/processDataValue'
        out:
          $ref: '#/components/schemas/processDataValue'
      example:
        format=raw:
          pin2Value: true
          in:
            valid: true
            value:
              - 12
              - 22
              - 216
        format=iodd:
          pin2Value: true
          in:
            valid: true
            value:
              Distance:
                value: 55
                unit: mm
              Quality:
                value: 12
        sio mode:
          pin2Value: true
          pin4Value: false
    deviceProcessDataValuePost:
      type: object
      properties:
        pin2Value:
          $ref: '#/components/schemas/pin2Value'
        pin4Value:
          $ref: '#/components/schemas/pin4Value'
        out:
          $ref: '#/components/schemas/processDataValue'
      example:
        format=raw:
          pin2Value:
            - 0
          out:
            valid: true
            value:
              - 12
              - 22
              - 216
        format=iodd:
          pin2Value:
            - 0
          out:
            valid: true
            value:
              Distance: 55
              Quality: 12
    deviceRawTypeValue:
      type: array
      description: The value in raw format.
      items:
        type: number
        minimum: 0
        maximum: 255
    deviceSimpleTypeValue:
      type: object
      description: The value (with simple type) in iodd format.
      properties:
        value:
          type: string
        unit:
          type: string
      required:
        - value
    deviceComplexTypeValue:
      type: object
      minProperties: 1
      maxProperties: 255
      description: The value (with complex type) in iodd format.
      additionalProperties:
        $ref: '#/components/schemas/deviceSimpleTypeValue'    
    deviceParameterValueGetPost:
      oneOf:
        - $ref: '#/components/schemas/deviceRawTypeValue'
        - $ref: '#/components/schemas/deviceSimpleTypeValue'
        - $ref: '#/components/schemas/deviceComplexTypeValue'
      example:
        format=raw:
          - 0
          - 156
          - 125
          - 25
        format=iodd, simpleType:
          value: 15
          unit: mm
        format=iodd, complexType:
          Distance:
            value: 15
            unit: mm
          Quality:
            value: 12
    deviceParameterSubindexValueGetPost:
      oneOf:
        - $ref: '#/components/schemas/deviceRawTypeValue'
        - $ref: '#/components/schemas/deviceSimpleTypeValue'
      example:
        format=raw:
          - 0
          - 156
          - 125
          - 25
        format=iodd:
          value: 152
          unit: mm
    ioddIdentification:
      type: object
      properties:
        vendorId:
          type: number
        deviceId:
          type: number
        version:
          type: string
        releaseDate:
          type: string
        ioLinkRevision:
          type: string
          enum:
            - '1.0'
            - '1.1'
    ioddFile:
      type: string
      format: binary
    ioddsGet:
      type: array
      items:
        $ref: '#/components/schemas/ioddIdentification'
      example:
        - vendorId: 1234
          deviceId: 4567
          version: '4.3'
          releaseDate: '2018-01-02'
          ioLinkRevision: '1.1'
        - vendorid: 4321
          deviceId: 8765
          version: '2.1'
          releaseDate: '2015-01-02'
          ioLinkRevision: '1.1'
  parameters:
    vendorId:
      name: vendorId
      in: path
      description: IO-Link VendorID
      required: true
      schema:
        type: integer
    deviceId:
      name: deviceId
      in: path
      description: IO-Link DeviceID
      required: true
      schema:
        type: integer
    ioLinkRevision:
      name: ioLinkRevision
      in: path
      description: IO-Link Revision
      required: true
      schema:
        type: string
        enum:
          - '1.0'
          - '1.1'
    mqttTopicId:
      name: topicId
      in: path
      description: >-
        ID of a configured MQTT topic. This the position of the topic in the
        topics list.
      required: true
      schema:
        type: integer
    portId:
      name: portId
      in: path
      description: Port ID starting with 1
      schema:
        type: integer
      required: true
    deviceName:
      name: deviceName
      in: path
      description: Device Name configured with the port/configuration URL
      schema:
        type: string
      required: true
    format:
      name: format
      in: query
      description: Value format in response document
      schema:
        $ref: '#/components/schemas/format'
    direction:
      name: direction
      in: query
      description: Process data element(s) in respose document
      schema:
        $ref: '#/components/schemas/direction'
    index:
      name: index
      in: path
      description: Index of ISDU variable
      schema:
        type: integer
      required: true
    subindex:
      name: subindex
      in: path
      description: Subindex of ISDU variable with the given index
      schema:
        type: integer
      required: true
  responses:
    errorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            required:
              - msgCode
              - message
            properties:
              msgCode:
                type: integer
              message:
                type: string
              iolError:
                type: integer
